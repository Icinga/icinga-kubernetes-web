/* Icinga for Kubernetes Web | (c) 2024 Icinga GmbH | AGPLv3 */

.logs > p {
  display: flex;
  flex-direction: column-reverse;
  overflow: auto;

  max-height: 50em;
  padding: 1em;

  background-color: black;
  color: white;

  white-space: pre;

  .monospace-font();
}

.details,
.labels,
.annotations,
.selectors,
.state {
  .horizontal-key-value > .key {
    width: 25em;
  }
}

.namespace-badge {
  vertical-align: baseline;

  max-width: 8em;
  margin-right: .2em;
  padding: 0 .25em;
  border-radius: .25em;


  // Namespace badges are wrapped by an "a" HTML tag when rendered in Icinga Notifications via the object
  // renderer hook, which forces the font weight to bold and the text colour to the default text one, making
  // the lists look different within Icinga Notification than in Icinga for Kubernetes.
  font-weight: normal;
  line-height: 1.5em / 12 * 11; // 1.5em / @font-size-small

  background-color: @gray-lighter;
  color: @text-color-light;

  .text-ellipsis();
}

.condition-table {
  display: block;
  overflow-x: auto;
  width: 100%;

  thead {
    border-bottom: 1px solid @gray-light;
  }

  tr:not(:last-child) {
    border-bottom: 1px solid @gray-lighter;
  }

  th {
    font-size: .857em;
    font-weight: normal;
    text-transform: uppercase;
    letter-spacing: .05em;
  }

  td {
    text-align: right;
    .text-ellipsis();
  }

  th:first-child,
  td:first-child {
    padding-left: 0;
  }
}

.cluster-form {
  .control-label-group {
    flex-direction: row;
    width: 5em;
    font-size: 1.2em;
    text-align: left;
  }

  .icinga-controls {
    select {
      max-width: 280px;
    }
  }
}

.reorder-handle-background {
  position: absolute;
  right: 0;
  bottom: 0.25em;

  display: none;

  height: ~"calc(100% - 0.5em)";
  width: 3em;

  background-color: @body-bg-color;
}

.reorder-handle-container {
  display: flex;
  justify-content: center;
  align-items: center;

  width: 100%;
  height: 100%;
  border-left: 1px solid @gray-light;
  background-color: @tr-hover-color;

  .icon {
    cursor: grab;

    &:active {
      cursor: grabbing;
    }
  }
}
